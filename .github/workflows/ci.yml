name: CI

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Create dotenv
      uses: iamsauravsharma/create-dotenv@v1.2.1
      env:
        FLASK_AUTH_SECRET: ${{ secrets.FLASK_AUTH_SECRET }}
        DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_REDIRECT_URI: ${{ secrets.DISCORD_REDIRECT_URI }}
        DISCORD_GUILD_NAME: "Club JDR TEST"
        POSTGRES_USER: "clubjdr"
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: "clubjdr"
        UNITTEST_CHANNEL_ID: ${{ secrets.UNITTEST_CHANNEL_ID }}
        CATEGORIES_CHANNEL_ID: ${{ secrets.CATEGORIES_CHANNEL_ID }}
        DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
        pip install -r requirements.txt
    - name: Lint with Black
      run: |
        black --check questmaster.py api
    - name: Set Locale
      run: |
          sudo locale-gen fr_FR.UTF-8
          sudo update-locale LANG=fr_FR.UTF-8
    - name: Tests with Pytest
      run: |
        python -m pytest tests/ --cov api --cov-report xml:coverage.xml --junitxml=junit.xml
    - name: Fix code coverage paths
      run: |
        sed -i 's#/home/runner/work/questmaster/questmaster/#/github/workspace/#g' coverage.xml
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Build the docker images
      run: docker-compose build
    - name: Run the stack
      run: docker-compose up -d
    - name: Ensure APP is running
      run:  "sleep 10 && curl -s -X 'GET' 'http://localhost:8000'"
    - name: Stop the stack
      run: docker-compose down
