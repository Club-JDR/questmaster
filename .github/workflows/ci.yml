name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create dotenv
        uses: iamsauravsharma/create-dotenv@v1.2.2
        env:
          FLASK_AUTH_SECRET: "${{ secrets.FLASK_AUTH_SECRET }}"
          DISCORD_CLIENT_ID: "${{ secrets.DISCORD_CLIENT_ID }}"
          DISCORD_CLIENT_SECRET: "${{ secrets.DISCORD_CLIENT_SECRET }}"
          DISCORD_BOT_TOKEN: "${{ secrets.DISCORD_BOT_TOKEN }}"
          DISCORD_REDIRECT_URI: "${{ secrets.DISCORD_REDIRECT_URI }}"
          DISCORD_GUILD_NAME: "Club JDR TEST"
          POSTGRES_USER: "clubjdr"
          POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_DB: "clubjdr"
          POSTGRES_HOST: "db"
          REDIS_HOST: "redis"
          UNITTEST_CHANNEL_ID: "${{ secrets.UNITTEST_CHANNEL_ID }}"
          POSTS_CHANNEL_ID: "${{ secrets.POSTS_CHANNEL_ID }}"
          DISCORD_GUILD_ID: "${{ secrets.DISCORD_GUILD_ID }}"
          DISCORD_GM_ROLE_ID: "${{ secrets.DISCORD_GM_ROLE_ID }}"
          DISCORD_ADMIN_ROLE_ID: "${{ secrets.DISCORD_ADMIN_ROLE_ID }}"
          DISCORD_PLAYER_ROLE_ID: "${{ secrets.DISCORD_PLAYER_ROLE_ID }}"
          FLASK_APP: "website"
      - name: Run middleware
        run: docker compose down && docker compose up -d db redis 
      - name: Build and run the app
        run: docker compose up -d --build app
      - name: Ensure app is running
        run: "sleep 5 && curl -4 -s -X 'GET' 'http://localhost:8000/health/' -H 'accept: application/json' || docker logs questmaster-app-1"
      - name: Lint with Black
        run: |
          docker compose run app-test black --check questmaster.py website
      - name: Run tests with coverage
        run: |
          docker compose run \
            --volume "$(pwd)":/github/workspace \
            --workdir /github/workspace \
            app-test \
            python -m pytest tests/ \
              --cov website \
              --cov-report xml:test-results/coverage.xml \
              --junitxml=test-results/junit.xml
      - name: Fix coverage paths for SonarCloud
        run: |
          sed -i 's|<source>/github/workspace/website|<source>website|' test-results/coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Stop the stack
        run: docker compose down