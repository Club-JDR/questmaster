"""Initial migration

Revision ID: 1ea698e20845
Revises: 
Create Date: 2025-06-12 12:19:04.832521

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1ea698e20845"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "channel",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM("oneshot", "campaign", name="game_type_enum"),
            nullable=False,
        ),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "system",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("icon", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "trophy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("unique", sa.Boolean(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vtt",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("icon", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "game",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("oneshot", "campaign", name="game_type_enum"),
            nullable=False,
        ),
        sa.Column("length", sa.String(), nullable=False),
        sa.Column("gm_id", sa.String(), nullable=False),
        sa.Column("system_id", sa.Integer(), nullable=False),
        sa.Column("vtt_id", sa.Integer(), nullable=True),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "restriction",
            sa.Enum("all", "16+", "18+", name="restriction_enum"),
            nullable=False,
        ),
        sa.Column("restriction_tags", sa.String(), nullable=True),
        sa.Column("party_size", sa.Integer(), nullable=False),
        sa.Column("party_selection", sa.Boolean(), nullable=False),
        sa.Column(
            "experience",
            sa.Enum("all", "beginners", "seasoned", name="game_xp_enum"),
            nullable=True,
        ),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("session_length", sa.DECIMAL(precision=2, scale=1), nullable=False),
        sa.Column(
            "frequency",
            sa.Enum(
                "weekly", "bi-weekly", "monthly", "other", name="game_frequency_enum"
            ),
            nullable=True,
        ),
        sa.Column(
            "characters",
            sa.Enum("with_gm", "self", "pregen", "choice", name="game_char_enum"),
            nullable=True,
        ),
        sa.Column(
            "classification", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "ambience",
            postgresql.ARRAY(
                sa.Enum("chill", "serious", "comic", "epic", name="game_ambience_enum")
            ),
            nullable=True,
        ),
        sa.Column("complement", sa.Text(), nullable=True),
        sa.Column("img", sa.String(), nullable=True),
        sa.Column("channel", sa.String(), nullable=True),
        sa.Column("msg_id", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("draft", "open", "closed", "archived", name="game_status_enum"),
            server_default="draft",
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["gm_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id"],
            ["system.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vtt_id"],
            ["vtt.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("game", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_game_slug"), ["slug"], unique=True)

    op.create_table(
        "user_trophy",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("trophy_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["trophy_id"],
            ["trophy.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "trophy_id"),
    )
    op.create_table(
        "game_players",
        sa.Column("game_id", sa.BigInteger(), nullable=False),
        sa.Column("player_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("game_id", "player_id"),
        sa.UniqueConstraint("game_id", "player_id", name="uix_game_user"),
    )
    op.create_table(
        "game_session",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.Column("start", sa.DateTime(), nullable=False),
        sa.Column("end", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("game_session")
    op.drop_table("game_players")
    op.drop_table("user_trophy")
    with op.batch_alter_table("game", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_game_slug"))

    op.drop_table("game")
    op.drop_table("vtt")
    op.drop_table("user")
    op.drop_table("trophy")
    op.drop_table("system")
    op.drop_table("channel")
    # ### end Alembic commands ###
