openapi: 3.0.7
info:
  title: QuestMaster
  description: This is the API endpoints for the Club JDR Booking app.
  contact:
    email: contact@club-jdr.fr
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://localhost:8000/
  - url: https://questmaster.club-jdr.fr/api/
tags:
  - name: user
    description: Players and DMs.
  - name: game
    description: Everything about a RPG game, from the ad posting to the booking.
paths:
  /health/:
    get:
      summary: API health check.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: QuestMaster API
                  version:
                    type: integer
                    example: 1
                  status:
                    type: string
                    example: "OK"
                  database:
                    type: string
                    example: "OK"
                  uptime:
                    type: string
                    example: "8 days, 3 hours, 30 minutes, 10 seconds"
                  date:
                    type: string
                    format: date
                    example: 2022-11-01:10:00:00
  /games/:
    get:
      tags:
        - game
      summary: List games.
      description: List all games.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      tags:
        - game
      summary: Create a new game.
      description: Create a new game.
      parameters:
        - name: game_name
          in: query
          required: true
          description: Name of the game
          schema:
             type: string
        - name: game_type
          in: query
          required: true
          description: Type of game
          schema:
             type: string
             enum:
              - oneshot
              - campaign
        - name: length
          in: query
          required: true
          description: Length of the game
          schema:
             type: string
        - name: gm_id
          in: query
          required: true
          description: GM ID of the game
          schema:
             type: string
        - name: system
          in: query
          required: true
          description: Game system of the game
          schema:
             type: string
        - name: description
          in: query
          required: true
          description: Description of the game
          schema:
             type: text
        - name: restriction
          in: query
          description: Age restriction for the game
          schema:
             type: string
             default: all
             enum:
             - all
             - 16+
             - 18+
        - name: restriction_tags
          in: query
          description: Restriction keywords for the game
          schema:
             type: string
        - name: party_size
          in: query
          description: Party size for the game
          schema:
             type: int
             default: 4
        - name: party_selection
          in: query
          description: Party selection for the game
          schema:
             type: boolean
             default: False
        - name: pregen
          in: query
          description: Pregen characters for the game
          schema:
             type: boolean
             default: False
        - name: status
          in: query
          description: Status for the game
          schema:
            type: string
            default: draft
            enum:
            - draft
            - open
            - closed
            - archived
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Game'
  /games/{game_id}/:
    get:
      parameters:
        - in: path
          name: game_id
          schema:
            type: integer
          required: true
          description: ID of the game to get.
      tags:
        - game
      summary: Get game details by ID.
      description: Game informations
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Game'
  /users/:
    get:
      summary: List all users.
      tags:
        - user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{user_id}/:
    post:
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to create.
      summary: Create the ID in the DB.
      tags:
        - user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    example: 'user#1234'
                  status:
                    type: string
                    example: 'created'
        '500':
          description: server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to get.
      tags:
        - user
      summary: Get user by ID.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
    delete:
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to delete.
      tags:
        - user
      summary: Delete user by ID.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                  status:
                    type: string
                    example: 'deleted'
components:
  schemas:
    Game:
      type: object
      required:
      - id
      - name
      - gm
      - type
      - length
      - system
      - description
      - restriction
      - party_size
      - party_selection
      - pregen
      - status
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
            - oneshot
            - campaign
          default: "oneshot"
        length:
          type: string
        gm:
          $ref: '#/components/schemas/User'
        players:
          type: array
          items:
            $ref: '#/components/schemas/User'
        system:
          type: string
        description:
          type: text
        restriction:
          type: string
          default: all
          enum:
            - all
            - '16+'
            - '18+'
        restriction_tags:
          type: string
        party_size:
          type: integer
        party_selection:
          type: boolean
          default: false
        pregen:
          type: boolean
          default: false
        channel:
          type: string
        role:
          type: string
        status:
          type: string
          enum:
            - 'draft'
            - 'open'
            - 'closed'
            - 'archived'
    User:
      type: object
      required:
      - id
      properties:
        id:
          type: string
        username:
          type: string
        is_gm:
          type: boolean
        avatar:
          type: string
        gm:
          type: array
          items:
            $ref: '#/components/schemas/Game'